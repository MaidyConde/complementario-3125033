# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JoIC2pwlLCcedAvC09RVrxrU_tg66XwQ
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import numpy as np

# Cargar los datos desde un archivo CSV
archivo_csv = 'tecnologia_popular.csv'  # Nombre del archivo
df = pd.read_csv(archivo_csv)

# Asegurarse de que las columnas de porcentaje no tengan el símbolo '%' y sean valores numéricos
df['AngularJS'] = df['AngularJS'].astype(str).str.rstrip('%').astype(float)
df['Node.js'] = df['Node.js'].astype(str).str.rstrip('%').astype(float)
df['Java'] = df['Java'].astype(str).str.rstrip('%').astype(float)
df['SQL'] = df['SQL'].astype(str).str.rstrip('%').astype(float)
df['JavaScript'] = df['JavaScript'].astype(str).str.rstrip('%').astype(float)

# Crear una columna de Ranking basada en el Año
df['Ranking'] = df['Año']

# Seleccionar la tecnología para análisis (por ejemplo: AngularJS)
X = df[['Ranking']].values  # Variable independiente (Año)
y = df['AngularJS'].values  # Variable dependiente (porcentaje de AngularJS)

# Crear y ajustar el modelo de regresión lineal
model = LinearRegression()
model.fit(X, y)

# Generar predicciones
y_pred = model.predict(X)

# Mostrar los coeficientes del modelo
print("Pendiente (coeficiente):", model.coef_[0])
print("Intercepto:", model.intercept_)

# Graficar los datos reales y la regresión lineal
plt.figure(figsize=(12, 6))
plt.scatter(df['Ranking'], df['AngularJS'], color="blue", label="Datos reales")
plt.plot(df['Ranking'], y_pred, color="red", label="Regresión Lineal")

# Etiquetas y título
plt.xlabel("Año")
plt.ylabel("Porcentaje de Uso de AngularJS (%)")
plt.title("Regresión Lineal sobre Uso de AngularJS")
plt.legend()
plt.grid(True)
plt.tight_layout()

# Mostrar el gráfico
plt.show()